{"version":3,"sources":["../src/install.js"],"names":["childProcess","require","path","fse","util","CWD","process","cwd","TEMP","join","Math","random","install","npmPackage","options","destination","sanitize","overwrite","quiet","log","error","destinationPath","directoryExists","packageName","getPackageName","remove","then","mkdirs","pathExists","npmrcExists","copy","installOptions","stdio","command","platform","Promise","resolve","reject","ps","exec","stdout","on","data","stderr","console","code","from","to","filterRegex","RegExp","filter","src","dest","match","move","toString","Error","module","exports"],"mappings":"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","file":"install.js","sourcesContent":["const childProcess = require('child_process');\nconst path = require('path');\nconst fse = require(\"fs-extra\");\n\nconst util = require('./util.js');\n\nconst CWD = process.cwd();\nconst TEMP = path.join(CWD, 'niv_modules', '.npm-install-version-temp' + Math.random());\n\nfunction install (npmPackage, options = {}) {\n  const {\n    destination = util.sanitize(npmPackage),\n    overwrite = false,\n    quiet = false\n  } = options;\n\n  const log = quiet ? () => {} : (...args) => console.log(...args);\n\n  if (!npmPackage) util.error();\n  const destinationPath = path.join(CWD, 'niv_modules', destination);\n  if (!overwrite && util.directoryExists(destinationPath)) {\n    return log(`Directory at ${destinationPath} already exists, skipping`);\n  }\n\n  // get real package name\n  const packageName = util.getPackageName(npmPackage);\n\n  return fse.remove(TEMP)\n    // make temp install dir\n    .then(() => fse.mkdirs(path.join(TEMP, 'node_modules')))\n\n    // copy local .npmrc file if exists\n    .then(() => fse.pathExists(path.join(CWD, '.npmrc')))\n    .then((npmrcExists) => {\n      if (npmrcExists) {\n        return fse.copy(path.join(CWD, '.npmrc'), path.join(TEMP, \".npmrc\"))\n      }\n    })\n\n    // install package to temp dir\n    .then(() => {\n      const installOptions = {\n        cwd: TEMP,\n        stdio: [null, null, null]\n      };\n      const command = process.platform === 'win32' ? 'npm.cmd' : 'npm';\n\n      return new Promise((resolve, reject) => {\n        const ps = childProcess.exec([command, 'install', npmPackage].join(\" \"), installOptions);\n\n        ps.stdout.on(\"data\", (data) => log(data));\n        ps.stderr.on(\"data\", (data) => console.error(data));\n        ps.on(\"close\", (code) => {\n            if(code !== 0) {\n              return reject(`npm install process exited with code ${code}`)\n            }\n            resolve();\n          });\n      });\n    })\n\n    // move deps inside package\n    .then(() => fse.mkdirs(path.join(TEMP, 'node_modules', packageName, 'node_modules')))\n    .then(() => {\n      const from = path.join(TEMP, 'node_modules');\n      const to = path.join(TEMP, 'node_modules', packageName, 'node_modules');\n      const filterRegex = new RegExp(\"^\" + path.join(TEMP, 'node_modules', packageName));\n      const filter = (src, dest) => {\n        return !src.match(filterRegex);\n      }\n\n      return fse.copy(from, to, { filter });\n    })\n\n    // copy to niv_modules/\n    .then(() => fse.remove(destinationPath))\n    .then(() => fse.move(path.join(TEMP, 'node_modules', packageName), destinationPath))\n\n    // cleanup\n    .then(() => fse.remove(TEMP))\n    .then(\n      () => log(`Installed ${npmPackage} to ${destinationPath}`),\n      error => {\n        console.error(`Error installing ${npmPackage}`);\n        console.error(error.toString());\n\n        throw Error(`Error installing ${npmPackage}`);\n      }\n    );\n}\n\nmodule.exports = install;\n"]}